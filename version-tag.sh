#!/bin/bash

# Проверка наличия файла VERSION
if [ ! -f "VERSION" ]; then
    echo "Ошибка: Файл VERSION не найден."
    exit 1
fi

VERSION=$(cat VERSION)

# Проверка, что VERSION содержит значение
if [ -z "$VERSION" ]; then
    echo "Ошибка: Файл VERSION пуст."
    exit 1
fi

MESSAGE="Релиз $VERSION"

# Проверка, что находимся в git репозитории
if ! git rev-parse --is-inside-work-tree > /dev/null 2>&1; then
    echo "Ошибка: Текущая директория не является git-репозиторием."
    exit 1
fi

# Проверка существования тега (важно сделать это до любых действий с коммитами)
if git rev-parse "v$VERSION" >/dev/null 2>&1; then
    echo "Ошибка: Тег v$VERSION уже существует."
    exit 1
fi

# Проверяем, есть ли незакоммиченные изменения (в рабочей директории или в индексе)
if ! git diff-index --quiet HEAD -- || ! git diff --quiet --staged; then
    # Есть изменения
    echo "Обнаружены несохраненные и/или незакоммиченные (staged) изменения."
    read -p "Хотите добавить все текущие изменения в коммит '$MESSAGE' и затем создать тег v$VERSION? (y/n): " choice
    if [ "$choice" = "y" ]; then
        echo "Добавление изменений и создание коммита '$MESSAGE'..."
        git add . # Добавляем все изменения (включая VERSION, если он изменен и не добавлен)
        
        # Пытаемся сделать коммит. Если нечего коммитить (например, VERSION уже был закоммичен и других изменений нет),
        # git commit вернет ошибку, и скрипт прервется. Это ожидаемое поведение.
        if git commit -m "$MESSAGE"; then
            echo "Коммит '$MESSAGE' успешно создан."
        else
            echo "Ошибка: Не удалось создать коммит '$MESSAGE'."
            echo "Возможно, не было новых изменений для коммита (например, файл VERSION не был изменен или уже был закоммичен с текущим содержимым)."
            echo "Убедитесь, что файл VERSION содержит версию, которую вы хотите тегировать, и что он является частью коммита, который вы хотите тегировать."
            exit 1
        fi
    else
        echo "Операция отменена. Изменения не были закоммичены. Тег не создан."
        exit 0 # Пользователь отменил коммит и тегирование
    fi
else
    # Нет изменений
    echo "Нет несохраненных или незакоммиченных изменений в репозитории."
    read -p "Хотите создать тег v$VERSION для текущего коммита (HEAD) с сообщением '$MESSAGE'? (y/n): " choice
    if [ "$choice" != "y" ]; then
        echo "Операция тегирования отменена."
        exit 0 # Пользователь отменил тегирование
    fi
    echo "Тег v$VERSION будет создан для текущего коммита (HEAD)."
    # Коммит не нужен, так как нет изменений.
fi

# Тегируем релиз
if ! git tag -a "v$VERSION" -m "$MESSAGE"; then
    echo "Ошибка при создании тега."
    exit 1
fi

# Проверка доступности удаленного репозитория
if ! git ls-remote origin -h refs/heads/main >/dev/null 2>&1; then
    echo "Ошибка: Удаленный репозиторий origin/main недоступен."
    exit 1
fi

# Пушим всё в GitHub
if ! git push origin main --tags; then
    echo "Ошибка при отправке изменений в удаленный репозиторий."
    exit 1
fi

echo "Релиз $VERSION успешно создан и запушен!"
